package org.firstinspires.ftc.teamcode;


import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.HardwareMap;
import com.qualcomm.robotcore.util.ElapsedTime;

/**
 * Created by shrey on 2017-11-05.
 */

public class DriveMethods extends HardwarePushBot{

        public static void driveRight(double speed){
            rightFrontDrive.setPower(speed);
            rightBackDrive.setPower(speed);
        }

        public static void driveLeft(double speed){
            leftFrontDrive.setPower(speed);
            leftBackDrive.setPower(speed);
        }

    /*
     * This method is used to stop the drive motors in order for the robot to stop when in between
     * the two thresholds. It's important to do this so the robot will stop, safely
     */
        public static void stopRightMotors() { //always zero
            rightFrontDrive.setPower(0);
            rightBackDrive.setPower(0);
        }

        public static void stopLeftMotors(){
            leftFrontDrive.setPower(0);
            leftBackDrive.setPower(0);
        }

    /*
     * These set of methods control the Glyph Lift system and the glyph claws
     */

        // GlyphLift moving up and down
   /* public static void glyphLift(double speed){
        glyphLift.setPower(speed);
    }

        // Opening the GlyphLift claws to grab the glyph
    public static void openGlyph (){
        glyphLiftRight.setPosition(0.55);
        glyphLiftLeft.setPosition(0.4);
        glyphLiftRight2.setPosition(0.55);
        glyphLiftLeft2.setPosition(0.4);
    }

    //Closing the GlyphLift claws to gain posession of glyph
    public static void closeGlyph (){
        glyphLiftRight.setPosition(0.25);
        glyphLiftLeft.setPosition(0.6);
        glyphLiftRight2.setPosition(0.25);
        glyphLiftLeft2.setPosition(0.6);
    }
*/
    /*
     * These methods are used to control the claw arm during endgame.
     * the claw arm is used to pick the relic and use the claw to grab the relic
     * the arm will extend forward to put the relic outside the field.
     */

    /*public static void getRelic(){
        grabRelic.setPosition(0);
    }

    public static void leaveRelic(){
        grabRelic.setPosition(0.5);
    }

    // Stop the claw arm movement
    public static void clawArmStop(){
        relicPosition.setPower(0);
    }

    // Extend claw arm forward
    public static void clawArmMovement(double speed){
        relicPosition.setPower(speed);
    }

    // Extend claw arm backward
    /*public static void clawArmBackward(double speed){
        relicPosition.setPower(-Math.abs(speed));
    }*/
}
